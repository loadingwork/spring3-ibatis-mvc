<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.loadingwork.mvc</groupId>
	<artifactId>spring3-ibatis-mvc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>


	<!-- 全局属性配置 -->
	<profiles>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>dev</env>
			</properties>
			<!-- 设置默认环境 -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 部署环境 -->
		<profile>
			<id>release</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>release</env>
			</properties>
		</profile>
		<!-- 测试环境 -->
		<profile>
			<id>test</id>
			<properties>
				<!-- 部署环境(对应配置文件版本) -->
				<env>test</env>
			</properties>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- 不执行测试用例，也不编译测试用例类 -->
		<maven.test.skip>true</maven.test.skip>
		<!-- 不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下 -->
		<skipTests>true</skipTests>
		<!-- jdk版本 -->
		<java.version>1.6</java.version>
		<spring.version>3.1.4.RELEASE</spring.version>
		<shiro.version>1.2.6</shiro.version>
		<struts.version>1.3.10</struts.version>
	</properties>


	<!-- 添加项目仓库位置 -->
	<repositories>

		<!-- 阿里云 -->
		<repository>
			<id>io.aliyun</id>
			<url>https://maven.aliyun.com/repository/central</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- spring地址 -->
		<repository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- @TODO 忘了以后再加 -->


	</repositories>



	<!-- 项目依赖 -->
	<dependencies>

		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.0.5</version>
		</dependency>
		

		<!-- spring3 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- ibatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis2</artifactId>
		    <version>2.3.6</version>
		</dependency>
		
		<!-- 数据库连接池 -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>
		
		<!-- 数据库驱动 -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>5.1.26</version>
		</dependency>
		
		<!-- 切面 -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjweaver</artifactId>
		    <version>1.6.6</version>
		</dependency>
		
		
		<!-- Struts1 -->
		<dependency>
		    <groupId>org.apache.struts</groupId>
		    <artifactId>struts-core</artifactId>
		    <version>${struts.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.struts</groupId>
		    <artifactId>struts-taglib</artifactId>
		    <version>${struts.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.struts</groupId>
		    <artifactId>struts-el</artifactId>
		    <version>${struts.version}</version>
		</dependency>
		
		
		
		
		
		<!-- shiro安全框架 -->
		<dependency>
		  <groupId>org.apache.shiro</groupId>
		  <artifactId>shiro-core</artifactId>
		  <version>${shiro.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.shiro</groupId>
		  <artifactId>shiro-web</artifactId>
		  <version>${shiro.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.apache.shiro</groupId>
		  <artifactId>shiro-spring</artifactId>
		  <version>${shiro.version}</version>
		</dependency>
		
		

		<!-- test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
			<scope>test</scope>
		</dependency>


		<!-- log -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.8</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>


		<!-- 辅助工具包 -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.4</version>
		</dependency>
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.4</version>
		</dependency>
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		    <version>2.6</version>
		</dependency>
				
		
		


	</dependencies>


	<!-- 编译配置 -->
	<!-- 产线 clean package -P -->
	<build>
		<finalName>${project.artifactId}-${env}</finalName>


		<!-- 资源处理 -->
		<resources>
			<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 关闭这个目录下的变量替换 -->
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>${project.build.directory}/classes</targetPath>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
					<include>**/*.xsd</include>
					<include>**/*.dic</include>
					<include>**/*.ttc</include>
					<include>**/*.ftl</include>
				</includes>
				<filtering>false</filtering>
			</resource>

			<!-- 修改为根据env部署环境值，把对应环境的配置文件拷贝到classes目录 开启变量替换 如 : ${env} -->
			<resource>
				<directory>deploy/${env}</directory>
				<targetPath>${project.build.directory}/classes</targetPath>
				<filtering>true</filtering>
			</resource>

		</resources>

		<plugins>
			<!-- 编译 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5</version>
				<!-- 没有版本号, 也不用插件管理就会使用本地仓库中最新的 -->
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-source-plugin</artifactId>
			    <version>2.4</version>
			</plugin>


		</plugins>


	</build>



</project>